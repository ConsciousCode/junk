"MAP" //Section must begin the file
short size = 36
byte[2] version //Bytes are MAJOR MINOR of the file format
byte length //Length of the name
char[length] name //Non-name bytes should be padded with NULL

"TIL" //Section for raw tile data
short size = 6 + 3*width*height
byte width,height //In tiles
short[width*height] data
	//Leftmost two bits are the collision mask
	// 00 = No collision
	// 01 = Full-block collision
	// 10 = down-left up-right collision
	// 11 = up-left down-right collision
	//Next bit is set if the tile has a special examination value
	//The rest of the 13 bits are the tile id, allowing for 2097152 tiles

"EXT" // Table of exit areas
short size = 3 + 3*entries
byte entries
{byte side,byte start,byte end,byte to}[entries] data
	//Side selects the side of the room, left, up, right, down
	//Start selects the starting tile
	// Vertical sides start at the top, horizontal start at the left
	//End indicates the length of the exit
	// Vertical sides go down, horizontal right
	//To is the id of the room the exit leads to

"EXM" //Table for examinations
short size = 3 + 9*entries
byte entries
{byte x, byte y, byte menu}[entries]
	//x and y select the tile with the examination data
	//menu is the id of the menu to open on examination

"MNU" //Menu table
short size = 3 + ???
byte entries
{byte voice,byte len,char[len] text}[entries]
	//Voice is an id indicating who's talking and what sound bite to use
	//Text is specially formatted to allow for text coloring, shaking, change
	// of text speed, menu options, etc.
	//\C{color,text} - colored text
	//\~{text} - shaky text
	//\!{speed,text} - change the text speed
	//\?{voice,text} - change the voice
	//\>{option:next, ...} - option menu

"ENT" //Entity table
short size = 3 + 9*entries
byte entries
{byte entity,byte x,byte y}[entries]
	//Entity is an id which may vary its behavior
	//x and y are in pixels from the upper-left corner of the map, y-inverted.
